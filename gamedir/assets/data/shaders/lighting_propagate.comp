#version 430

layout(local_size_x = 25, local_size_y = 25, local_size_z = 1) in;
uniform int light_scale;
uniform layout(binding=2, rgba8) image2D pxTex;
uniform layout(binding=3, r32f) image2D srcTex;
uniform layout(binding=4, r32f) image2D dstTex;

void main() {
    ivec2 i = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    ivec2 i_neighbors = i + ivec2(1);
    float f = 0.0;
    for (int iter = 0; iter < 25; iter++) {
        // memoryBarrier();
        barrier();

        f = imageLoad(srcTex, i_neighbors).r;
        f = max(f, 0.95 * imageLoad(srcTex, i_neighbors + ivec2(1, 0)).r);
        f = max(f, 0.925 * imageLoad(srcTex, i_neighbors + ivec2(1, 1)).r);
        f = max(f, 0.95 * imageLoad(srcTex, i_neighbors + ivec2(-1, 0)).r);
        f = max(f, 0.925 * imageLoad(srcTex, i_neighbors + ivec2(-1, 1)).r);
        f = max(f, 0.95 * imageLoad(srcTex, i_neighbors + ivec2(0, 1)).r);
        f = max(f, 0.925 * imageLoad(srcTex, i_neighbors + ivec2(1, -1)).r);
        f = max(f, 0.95 * imageLoad(srcTex, i_neighbors + ivec2(0, -1)).r);
        f = max(f, 0.925 * imageLoad(srcTex, i_neighbors + ivec2(-1, -1)).r);
        
        f *= imageLoad(pxTex, i * light_scale).a > 0.0 ? 0.9 : 1.0;

        // memoryBarrier();
        barrier();
        imageStore(srcTex, i_neighbors, vec4(f, vec3(1.0)));
    }

    // memoryBarrier();
    barrier();
    imageStore(dstTex, i, vec4(f, vec3(1.0)));
}